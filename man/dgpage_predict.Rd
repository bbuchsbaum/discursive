% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dpage.R
\name{dgpage_predict}
\alias{dgpage_predict}
\title{Predict labels using a trained DGPAGE model via 1-NN classification}
\usage{
dgpage_predict(model, Xtest, k = 1, method = "euclidean")
}
\arguments{
\item{model}{The list returned by \code{\link{dgpage_fit}}.
Must also contain \code{ytrain} (the vector of training labels) and \code{Ytrain}
(the \eqn{n x r} embedding of training data), which you can store yourself.}

\item{Xtest}{A numeric matrix of size \eqn{m \times d} (test data).}

\item{k}{Number of neighbors (default 1).}

\item{method}{Distance method for \code{\link[Rnanoflann]{nn}}. Default "euclidean".}
}
\value{
A vector of length \eqn{m} with predicted labels.
}
\description{
After you have fit the DGPAGE model to some labeled training data \code{Xtrain}, you can
project \code{Xtrain} and store their embeddings \code{Ytrain}, then for \emph{new} data
\code{Xtest}, you project them using the learned \code{P}, and perform a \strong{1-nearest neighbor}
search in the low-dimensional subspace using \pkg{Rnanoflann}.
}
\examples{
\dontrun{
  # Suppose we already fit a model:
  # model$Ytrain <- t(model$P) \%*\% model$Z  # r x n -> we store its transpose below
  # model$Ytrain_t <- t(model$Ytrain)       # n x r
  # model$ytrain  <- y  # training labels
  #
  # Now we get new data Xtest:
  preds <- dgpage_predict(model, Xtest)
}
}
\seealso{
\code{\link[Rnanoflann]{nn}}
}
